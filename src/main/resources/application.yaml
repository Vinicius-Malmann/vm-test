server:
  port: 8080


spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/vmtech_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      idle-timeout: 30000
      max-lifetime: 120000
      connection-timeout: 30000

    jpa:
      show-sql: true
      properties:
        hibernate:
          format_sql: true
          dialect: org.hibernate.dialect.PostgreSQLDialect
          ddl-auto: update
  application:
    name: vm-teste-tecnico
  mail:
    username: vmtech.teste@gmail.com

jwt:
  secret: "Ab1!Xy9@Lu3#Pq7^ZrLm*Go2$TxQCsaeaefdf"
  expiration: 86400000

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.vmtech: DEBUG

paths:
  /vmtech/auth/login:
    post:
      tags: [auth]
      summary: "Autenticar usuário"
      description: "Endpoint para autenticação de usuários"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              validLogin:
                value: { "username": "usuario123", "password": "Senha@123" }
              invalidLogin:
                value: { "username": "a", "password": "1" }
      responses:
        '200':
          description: Autentica��o bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
